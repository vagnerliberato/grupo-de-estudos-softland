########################################################################
# JBoss, Home of Professional Open Source
# Copyright 2009-2011, Red Hat and individual contributors
# by the @authors tag. See the copyright.txt in the distribution for a
# full listing of individual contributors.
#
# This is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.
#
# @authors Sanne Grinovero <sanne@hibernate.org> (C) 2011 Red Hat Inc.
#
# ConcurrentMergeErrorTest
#
# Using Byteman we alter IndexWriter at runtime to throw an IOException during the merge operation, this might happen
# in a secondary thread.
# The flag "createIndexWriterIOException" is checked to make sure we only raise the exception when requested,
# i.e. when we are running the ConcurrentMergeErrorHandledTest

RULE org.apache.lucene.index.ConcurrentMergeScheduler throws IOException in service thread
CLASS org.apache.lucene.index.ConcurrentMergeScheduler
METHOD merge
IF flagged("createIndexWriterIOException")
	DO	
		clear("createIndexWriterIOException");
		traceln( "Next invocation of ConcurrentMergeScheduler.merge() is going to throw an IOException\n" );
		throw new IOException("Byteman said: your disk is full!");
ENDRULE

RULE ConcurrentMergeErrorHandledTest
CLASS org.hibernate.search.test.errorhandling.ConcurrentMergeErrorHandledTest
METHOD testLuceneMergerErrorHandling
IF TRUE
	DO
		traceln( "\n *** Byteman rule enabled! Next IndexWriter.checkpoint invocation will fail. ***\n" );
		flag("createIndexWriterIOException")
ENDRULE

#
# JPATimeoutTest needs the document collection to take at least a second
#

RULE Enable QueryHits slow down
CLASS org.hibernate.search.test.query.timeout.JPATimeoutTest
METHOD testQueryTimeoutException
IF TRUE
	DO
		traceln( "\n *** Byteman rule enabled! Next Hits collection will be slow. ***\n" );
		flag("slowDownDocumentCollection")
ENDRULE

RULE QueryHits updateTopDocs slow down
CLASS QueryHits
METHOD updateTopDocs
HELPER org.hibernate.search.test.util.BytemanHelper
AT ENTRY
IF flagged("slowDownDocumentCollection")
	DO
		clear("slowDownDocumentCollection");
		traceln( "\n *** Byteman sleeping a second... ***\n" );
		sleepASecond();
ENDRULE
